{"version":3,"sources":["markdown.js"],"names":["root","Pen","converter","valid","str","includes","length","match","action","pen","cmd","focusNode","selection","parentNode","config","editor","textContent","getRangeAt","endOffset","innerHTML","slice","startOffset","execCommand","init","on","e","code","keyCode","which","range","getRange","startContainer","endContainer","nodeValue","preventDefault","prototype","markdown","window"],"mappings":";;AAAA;AACC,WAASA,IAAT,EAAe;;AAEd;AACA,MAAI,CAACA,KAAKC,GAAV,EAAe;;AAEf;AACA,MAAIC,YAAY,EAAhB;;AAEA;AACAA,YAAUC,KAAV,GAAkB,UAASC,GAAT,EAAc;AAC9B,QAAI,CAAC,GAAD,EAAM,IAAN,EAAY,KAAZ,EAAmB,MAAnB,EAA2B,OAA3B,EAAoC,QAApC,EAA8CC,QAA9C,CAAuDD,GAAvD,CAAJ,EAAiE;AAC/D,mBAAWA,IAAIE,MAAf;AACD,KAFD,MAEO,IAAIF,QAAQ,KAAZ,EAAmB;AACxB,aAAO,WAAP;AACD,KAFM,MAEA,IAAIA,QAAQ,GAAZ,EAAiB;AACtB,aAAO,YAAP;AACD,KAFM,MAEA,IAAIA,QAAQ,IAAZ,EAAkB;AACvB,aAAO,mBAAP;AACD,KAFM,MAEA,IAAIA,QAAQ,GAAR,IAAeA,QAAQ,GAA3B,EAAgC;AACrC,aAAO,qBAAP;AACD,KAFM,MAEA,IAAIA,IAAIG,KAAJ,CAAU,mBAAV,CAAJ,EAAoC;AACzC,aAAO,sBAAP;AACD;AACF,GAdD;;AAgBA;AACAL,YAAUM,MAAV,GAAmB,UAASC,GAAT,EAAcC,GAAd,EAAmB;AAAA,QAC9BC,SAD8B,GAChBF,IAAIG,SADY,CAC9BD,SAD8B;;AAEpC,QAAIA,UAAUE,UAAV,KAAyBJ,IAAIK,MAAJ,CAAWC,MAAxC,EAAgD;AAC9C,UAAIJ,UAAUK,WAAV,CAAsBV,MAAtB,KAAkCG,IAAIG,SAAJ,CAAcK,UAAd,CAAyB,CAAzB,EAA4BC,SAAlE,EAA6E;AAC3EP,kBAAUE,UAAV,CAAqBM,SAArB,GAAiC,MAAjC;AACD,OAFD,MAEO;AACLR,kBAAUK,WAAV,GAAwBL,UAAUK,WAAV,CAAsBI,KAAtB,CAA4BX,IAAIG,SAAJ,CAAcK,UAAd,CAAyB,CAAzB,EAA4BI,WAAxD,CAAxB;AACD;AACF;AACDZ,QAAIa,WAAJ,CAAgBZ,GAAhB;AACD,GAVD;;AAYA;AACAR,YAAUqB,IAAV,GAAiB,UAASd,GAAT,EAAc;AAC7BA,QAAIe,EAAJ,CAAO,UAAP,EAAmB,UAASC,CAAT,EAAY;AAC7B,UAAIC,OAAOD,EAAEE,OAAF,IAAaF,EAAEG,KAA1B;AACA,UAAIF,SAAS,EAAb,EAAiB;AACf,YAAIG,QAAQpB,IAAIqB,QAAJ,EAAZ;AADe,YAETC,cAFS,GAEgDF,KAFhD,CAETE,cAFS;AAAA,YAEOC,YAFP,GAEgDH,KAFhD,CAEOG,YAFP;AAAA,YAEqBX,WAFrB,GAEgDQ,KAFhD,CAEqBR,WAFrB;AAAA,YAEkCH,SAFlC,GAEgDW,KAFhD,CAEkCX,SAFlC;AAAA,YAGTe,SAHS,GAGKxB,IAAIG,SAAJ,CAAcD,SAHnB,CAGTsB,SAHS;;AAIf,YAAIF,mBAAmBC,YAAnB,IAAmCX,gBAAgBH,SAAnD,IAAgEe,SAApE,EAA+E;AAC7E,cAAIvB,MAAMR,UAAUC,KAAV,CAAgB8B,UAAUb,KAAV,CAAgB,CAAhB,EAAmBC,WAAnB,CAAhB,CAAV;AACA,cAAIX,GAAJ,EAAS;AACP;AACAe,cAAES,cAAF;AACAhC,sBAAUM,MAAV,CAAiBC,GAAjB,EAAsBC,GAAtB;AACD;AACF;AACF;AACF,KAfD;AAgBD,GAjBD;;AAmBA;AACAV,OAAKC,GAAL,CAASkC,SAAT,CAAmBC,QAAnB,GAA8BlC,SAA9B;AAED,CA7DA,EA6DCmC,MA7DD,CAAD","file":"markdown.js","sourcesContent":["/*! Licensed under MIT, https://github.com/sofish/pen */\n(function(root) {\n\n  // only works with Pen\n  if (!root.Pen) return;\n\n  // markdown converter obj\n  let converter = {};\n\n  // return valid markdown syntax\n  converter.valid = function(str) {\n    if (['#', '##', '###', '####', '#####', '######'].includes(str)) {\n      return `h${str.length}`;\n    } else if (str === '```') {\n      return 'codeblock';\n    } else if (str === '>') {\n      return 'blockquote';\n    } else if (str === '1.') {\n      return 'insertorderedlist';\n    } else if (str === '-' || str === '*') {\n      return 'insertunorderedlist';\n    } else if (str.match(/^(?:\\.|\\*|\\-){3,}/)) {\n      return 'inserthorizontalrule';\n    }\n  };\n\n  // exec command\n  converter.action = function(pen, cmd) {\n    let { focusNode } = pen.selection;\n    if (focusNode.parentNode !== pen.config.editor) {\n      if (focusNode.textContent.length ===  pen.selection.getRangeAt(0).endOffset) {\n        focusNode.parentNode.innerHTML = '<br>';\n      } else {\n        focusNode.textContent = focusNode.textContent.slice(pen.selection.getRangeAt(0).startOffset);\n      }\n    }\n    pen.execCommand(cmd);\n  };\n\n  // init converter\n  converter.init = function(pen) {\n    pen.on('keypress', function(e) {\n      let code = e.keyCode || e.which;\n      if (code === 32) {\n        let range = pen.getRange();\n        let { startContainer, endContainer, startOffset, endOffset } = range;\n        let { nodeValue } = pen.selection.focusNode;\n        if (startContainer === endContainer && startOffset === endOffset && nodeValue) {\n          let cmd = converter.valid(nodeValue.slice(0, startOffset));\n          if (cmd) {\n            // prevents leading space after executing command\n            e.preventDefault();\n            converter.action(pen, cmd);\n          }\n        }\n      }\n    });\n  };\n\n  // append to Pen\n  root.Pen.prototype.markdown = converter;\n\n}(window));\n"]}